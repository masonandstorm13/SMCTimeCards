/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui.WorkOrderGui.MultiPartWorkOrder;
import java.awt.Frame;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import Custom.FileHandler;
import Gui.WorkOrderGui.customerSelect;
import Gui.WorkOrderGui.workOrderExtraMenu;
import Objects.Customer;
import Objects.DeliveryTicket;
import Objects.InvoiceNumber;
import Objects.PONumber;
import Objects.WorkInProgress;
import Objects.WorkOrder;
import Objects.WorkOrderSuper;
import Runner.MainRunner;
import javax.swing.JMenu;
import java.awt.GridLayout;

/**
 *
 * @author Mason Smith
 */
@SuppressWarnings("serial")
public class newWorkOrderMultiPart extends javax.swing.JFrame {
	
	public static Customer selectedCustomer = null;
	public static WorkOrder workOrder = new WorkOrder();
	public static WorkOrderSuper workOrderSuper = new WorkOrderSuper();
	public List<PONumber> poNumberList = new ArrayList<PONumber>();
	public List<InvoiceNumber> invoiceList = new ArrayList<InvoiceNumber>();
	public List<DeliveryTicket> deliveryTicketList = new ArrayList<DeliveryTicket>();
	private JFrame extraMenu;
	private int totalParts;
	private int currentPart;
	
    /**
     * Creates new form newWorkOrder
     */
    public newWorkOrderMultiPart(int totalParts, int currentPart, WorkOrderSuper workOrderSuper) {    	
    	setTitle("multiPartNewWorkOrder " + currentPart);
    	
    	if(workOrderSuper != null) {
    		newWorkOrderMultiPart.workOrderSuper = workOrderSuper;
    	}
    	this.totalParts = totalParts;
    	this.currentPart = currentPart;
    	
    	extraMenu = new workOrderExtraMenu(this.getTitle()); 
    	newWorkOrderMultiPart.workOrderSuper.setMultiPart(true);
        initComponents();
        //sets up extra menu location and set it to visible
        extraMenu.setLocation((int)this.getLocation().getX() + this.getWidth() - 10, (int)this.getLocation().getY());
    	extraMenu.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        PanelDate = new javax.swing.JPanel();
        TextField_Date = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        PanelWorkOrderNumber = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TextField_WorkOrderNumber = new javax.swing.JFormattedTextField();
        PanelCustomer = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TextField_Customer = new javax.swing.JTextField();
        TextField_Customer.setEditable(false);
        TextField_Customer.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		customerSelect selectCustomer = new customerSelect(true);
        		selectCustomer.setVisible(true);
        	}
        });
        jPanel4 = new javax.swing.JPanel();
        PanelPhoneNumber = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        TextField_Phone = new javax.swing.JTextField();
        PanelFax = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        TextField_Fax = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        PanelOrderedBy = new javax.swing.JPanel();
        TextField_OrderedBy = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        PanelCharge = new javax.swing.JPanel();
        CheckBox_Charge = new javax.swing.JCheckBox();
        CheckBox_Charge.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_COD.setSelected(false);
        	}
        });
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        PanelRush = new javax.swing.JPanel();
        PanelOverTime = new javax.swing.JPanel();
        CheckBox_OverTime = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        PanelQty = new javax.swing.JPanel();
        TextField_Qty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        PanelShipVia = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        PanelSmc = new javax.swing.JPanel();
        CheckBox_SMC = new javax.swing.JCheckBox();
        CheckBox_SMC.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_MotorFreight.setSelected(false);
        		CheckBox_Ups.setSelected(false);
        		CheckBox_Cpu.setSelected(false);
        		CheckBox_Courier.setSelected(false);
        	}
        });
        jPanel15 = new javax.swing.JPanel();
        PanelMotorFreight = new javax.swing.JPanel();
        CheckBox_MotorFreight = new javax.swing.JCheckBox();
        CheckBox_MotorFreight.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_SMC.setSelected(false);
        		CheckBox_Ups.setSelected(false);
        		CheckBox_Cpu.setSelected(false);
        		CheckBox_Courier.setSelected(false);
        	}
        });
        PanelUps = new javax.swing.JPanel();
        CheckBox_Ups = new javax.swing.JCheckBox();
        CheckBox_Ups.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_MotorFreight.setSelected(false);
        		CheckBox_SMC.setSelected(false);
        		CheckBox_Cpu.setSelected(false);
        		CheckBox_Courier.setSelected(false);
        	}
        });
        jPanel16 = new javax.swing.JPanel();
        PanelCpu = new javax.swing.JPanel();
        CheckBox_Cpu = new javax.swing.JCheckBox();
        CheckBox_Cpu.setSelected(true);
        CheckBox_Cpu.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_MotorFreight.setSelected(false);
        		CheckBox_Ups.setSelected(false);
        		CheckBox_SMC.setSelected(false);
        		CheckBox_Courier.setSelected(false);
        	}
        });
        PanelCourier = new javax.swing.JPanel();
        CheckBox_Courier = new javax.swing.JCheckBox();
        CheckBox_Courier.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_MotorFreight.setSelected(false);
        		CheckBox_Ups.setSelected(false);
        		CheckBox_Cpu.setSelected(false);
        		CheckBox_SMC.setSelected(false);        		
        	}
        });
        PanelDescription = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextPane_Discrption = new javax.swing.JTextPane();
        PanelButtons = new javax.swing.JPanel();
        PanelSubmit = new javax.swing.JPanel();
        Button_Submit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu_Back = new javax.swing.JMenu();
        Menu_Back.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) {
        		MainRunner.runWorkOrderMain();
        		//finds current frame out of listed frames and disposes of it
        		for(int i = 0; i < Frame.getFrames().length; i++) {
        			if(Frame.getFrames()[i].getTitle().equals("singlePartNewWorkOrder")) {
        				Frame.getFrames()[i].dispose();
        			}
        			if(Frame.getFrames()[i].getTitle().equals("workOrderExtra")) {
        				Frame.getFrames()[i].dispose();
        			}
        		}
        	}
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(720, 810));

        jPanel1.setMinimumSize(new java.awt.Dimension(720, 810));
        jPanel1.setPreferredSize(new java.awt.Dimension(720, 810));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel2.setPreferredSize(new java.awt.Dimension(720, 50));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        PanelDate.setLayout(new java.awt.BorderLayout());

        TextField_Date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_Date.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_Date.setPreferredSize(new java.awt.Dimension(360, 40));
        PanelDate.add(TextField_Date, java.awt.BorderLayout.PAGE_END);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel1.setText("Date");
        jLabel1.setMaximumSize(new java.awt.Dimension(20, 10));
        jLabel1.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel1.setPreferredSize(new java.awt.Dimension(360, 10));
        PanelDate.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel2.add(PanelDate);

        PanelWorkOrderNumber.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel2.setText("WorkOrder Number");
        jLabel2.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel2.setPreferredSize(new java.awt.Dimension(360, 10));
        PanelWorkOrderNumber.add(jLabel2, java.awt.BorderLayout.CENTER);

        TextField_WorkOrderNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_WorkOrderNumber.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_WorkOrderNumber.setPreferredSize(new java.awt.Dimension(360, 40));
        PanelWorkOrderNumber.add(TextField_WorkOrderNumber, java.awt.BorderLayout.PAGE_END);

        jPanel2.add(PanelWorkOrderNumber);

        jPanel1.add(jPanel2);

        PanelCustomer.setPreferredSize(new java.awt.Dimension(720, 100));
        PanelCustomer.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel3.setText("Customer");
        jLabel3.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel3.setPreferredSize(new java.awt.Dimension(720, 10));
        PanelCustomer.add(jLabel3, java.awt.BorderLayout.CENTER);

        TextField_Customer.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_Customer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_Customer.setPreferredSize(new java.awt.Dimension(720, 90));
        PanelCustomer.add(TextField_Customer, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(PanelCustomer);

        jPanel4.setPreferredSize(new java.awt.Dimension(720, 50));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        PanelPhoneNumber.setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel4.setText("Phone");
        jLabel4.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel4.setPreferredSize(new java.awt.Dimension(360, 10));
        PanelPhoneNumber.add(jLabel4, java.awt.BorderLayout.CENTER);

        TextField_Phone.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_Phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_Phone.setPreferredSize(new java.awt.Dimension(360, 40));
        PanelPhoneNumber.add(TextField_Phone, java.awt.BorderLayout.PAGE_END);

        jPanel4.add(PanelPhoneNumber);

        PanelFax.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel5.setText("Fax");
        jLabel5.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel5.setPreferredSize(new java.awt.Dimension(360, 10));
        PanelFax.add(jLabel5, java.awt.BorderLayout.CENTER);

        TextField_Fax.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_Fax.setPreferredSize(new java.awt.Dimension(360, 40));
        PanelFax.add(TextField_Fax, java.awt.BorderLayout.PAGE_END);

        jPanel4.add(PanelFax);

        jPanel1.add(jPanel4);

        jPanel5.setPreferredSize(new java.awt.Dimension(720, 50));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        PanelOrderedBy.setPreferredSize(new java.awt.Dimension(180, 50));
        PanelOrderedBy.setLayout(new java.awt.BorderLayout());

        TextField_OrderedBy.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_OrderedBy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_OrderedBy.setPreferredSize(new java.awt.Dimension(180, 40));
        PanelOrderedBy.add(TextField_OrderedBy, java.awt.BorderLayout.PAGE_END);

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel8.setText("Ordered By");
        jLabel8.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel8.setPreferredSize(new java.awt.Dimension(180, 10));
        PanelOrderedBy.add(jLabel8, java.awt.BorderLayout.CENTER);

        jPanel5.add(PanelOrderedBy);
        PanelCharge.setLayout(new GridLayout(0, 2, 0, 0));

        CheckBox_Charge.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        CheckBox_Charge.setText("Charge");
        CheckBox_Charge.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelCharge.add(CheckBox_Charge);
        CheckBox_Charge.getAccessibleContext().setAccessibleName("CheckBox_Charge");

        jPanel5.add(PanelCharge);
        CheckBox_COD = new javax.swing.JCheckBox();
        PanelCharge.add(CheckBox_COD);
        CheckBox_COD.setSelected(true);
        CheckBox_COD.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		CheckBox_Charge.setSelected(false);
        	}
        });
        
                CheckBox_COD.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
                CheckBox_COD.setText("COD");
                CheckBox_COD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                CheckBox_COD.getAccessibleContext().setAccessibleName("CheckBox_COD");

        jPanel1.add(jPanel5);

        jPanel6.setPreferredSize(new java.awt.Dimension(720, 50));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setMinimumSize(new java.awt.Dimension(360, 50));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        PanelRush.setPreferredSize(new java.awt.Dimension(180, 50));
        PanelRush.setLayout(new java.awt.GridLayout(1, 0));
        PanelDueDate = new javax.swing.JPanel();
        PanelDueDate.setPreferredSize(new java.awt.Dimension(180, 50));
        PanelRush.add(PanelDueDate);
        jLabel7 = new javax.swing.JLabel();
        TextField_DueDate = new javax.swing.JTextField();
        
                PanelDueDate.setLayout(new java.awt.BorderLayout());
                
                        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
                        jLabel7.setText("Due Date");
                        jLabel7.setMinimumSize(new java.awt.Dimension(43, 10));
                        jLabel7.setPreferredSize(new java.awt.Dimension(360, 10));
                        PanelDueDate.add(jLabel7, java.awt.BorderLayout.CENTER);
                        
                                TextField_DueDate.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
                                TextField_DueDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                                TextField_DueDate.setPreferredSize(new java.awt.Dimension(360, 40));
                                PanelDueDate.add(TextField_DueDate, java.awt.BorderLayout.PAGE_END);

        jPanel3.add(PanelRush);

        PanelOverTime.setPreferredSize(new java.awt.Dimension(180, 50));
        PanelOverTime.setLayout(new java.awt.GridLayout(1, 0));

        CheckBox_OverTime.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        CheckBox_OverTime.setText("OverTime");
        CheckBox_OverTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CheckBox_OverTime.setPreferredSize(new java.awt.Dimension(180, 50));
        PanelOverTime.add(CheckBox_OverTime);

        jPanel3.add(PanelOverTime);
        CheckBox_Rush = new javax.swing.JCheckBox();
        PanelOverTime.add(CheckBox_Rush);
        
                CheckBox_Rush.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
                CheckBox_Rush.setText("Rush");
                CheckBox_Rush.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                CheckBox_Rush.setPreferredSize(new java.awt.Dimension(180, 50));

        jPanel6.add(jPanel3);

        jPanel1.add(jPanel6);

        jPanel7.setPreferredSize(new java.awt.Dimension(720, 50));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        PanelQty.setLayout(new java.awt.BorderLayout());

        TextField_Qty.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        TextField_Qty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_Qty.setPreferredSize(new java.awt.Dimension(360, 40));
        PanelQty.add(TextField_Qty, java.awt.BorderLayout.PAGE_END);

        jLabel10.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel10.setText("Qty");
        jLabel10.setToolTipText("");
        jLabel10.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel10.setPreferredSize(new java.awt.Dimension(360, 10));
        PanelQty.add(jLabel10, java.awt.BorderLayout.CENTER);

        jPanel7.add(PanelQty);

        jPanel13.setLayout(new java.awt.GridLayout(0, 3));

        jPanel14.setLayout(new java.awt.GridLayout(0, 1));

        PanelShipVia.setLayout(new java.awt.BorderLayout());

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel9.setText("Ship Via:");
        PanelShipVia.add(jLabel9, java.awt.BorderLayout.CENTER);

        jPanel14.add(PanelShipVia);

        PanelSmc.setLayout(new java.awt.BorderLayout());

        CheckBox_SMC.setText("SMC");
        PanelSmc.add(CheckBox_SMC, java.awt.BorderLayout.CENTER);

        jPanel14.add(PanelSmc);

        jPanel13.add(jPanel14);

        jPanel15.setLayout(new java.awt.GridLayout(0, 1));

        PanelMotorFreight.setLayout(new java.awt.BorderLayout());

        CheckBox_MotorFreight.setText("Motor Freight");
        PanelMotorFreight.add(CheckBox_MotorFreight, java.awt.BorderLayout.CENTER);

        jPanel15.add(PanelMotorFreight);

        PanelUps.setLayout(new java.awt.BorderLayout());

        CheckBox_Ups.setText("UPS");
        PanelUps.add(CheckBox_Ups, java.awt.BorderLayout.CENTER);

        jPanel15.add(PanelUps);

        jPanel13.add(jPanel15);

        jPanel16.setLayout(new java.awt.GridLayout(0, 1));

        PanelCpu.setLayout(new java.awt.BorderLayout());

        CheckBox_Cpu.setText("CPU");
        PanelCpu.add(CheckBox_Cpu, java.awt.BorderLayout.CENTER);

        jPanel16.add(PanelCpu);

        PanelCourier.setLayout(new java.awt.BorderLayout());

        CheckBox_Courier.setText("Courier");
        CheckBox_Courier.setToolTipText("");
        PanelCourier.add(CheckBox_Courier, java.awt.BorderLayout.CENTER);

        jPanel16.add(PanelCourier);

        jPanel13.add(jPanel16);

        jPanel7.add(jPanel13);

        jPanel1.add(jPanel7);

        PanelDescription.setPreferredSize(new java.awt.Dimension(720, 375));
        PanelDescription.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel11.setText("Description");
        jLabel11.setToolTipText("");
        jLabel11.setMinimumSize(new java.awt.Dimension(43, 10));
        jLabel11.setPreferredSize(new java.awt.Dimension(720, 10));
        PanelDescription.add(jLabel11, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TextPane_Discrption.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        jScrollPane1.setViewportView(TextPane_Discrption);

        PanelDescription.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(PanelDescription);

        PanelButtons.setPreferredSize(new java.awt.Dimension(720, 50));
        PanelButtons.setLayout(new java.awt.GridLayout(1, 0));

        PanelSubmit.setPreferredSize(new java.awt.Dimension(360, 100));
        PanelSubmit.setLayout(new java.awt.BorderLayout());

        Button_Submit.setText("Save");
        PanelSubmit.add(Button_Submit, java.awt.BorderLayout.CENTER);

        PanelButtons.add(PanelSubmit);

        jPanel1.add(PanelButtons);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuBar1.setPreferredSize(new java.awt.Dimension(50, 21));

        Menu_Back.setText("Back");
        jMenuBar1.add(Menu_Back);
        Menu_Back.getAccessibleContext().setAccessibleName("Back");

        setJMenuBar(jMenuBar1);
        
        mnExtraMenu = new JMenu();
        mnExtraMenu.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) {
        		extraMenu.setVisible(true);
        	}
        });
        mnExtraMenu.setText("Extra Menu");
        jMenuBar1.add(mnExtraMenu);
        
        //saves the work order if conditions are meet
        Button_Submit.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		//sets up required objects for checking values
        		 Object[] options = {"OK"};
        		 String datePattern = "\\d{2}/\\d{2}/\\d{4}";
        		 
        		 //sets up file handler
        		 FileHandler fileHandler = new FileHandler();
        		 
        		//checks if required fields have values in them
        		if(TextField_Date.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Date Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_WorkOrderNumber.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "WorkOrder Number Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_Customer.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Customer Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_Phone.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Phone Number Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_OrderedBy.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Ordered By Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_DueDate.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Due Date Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextField_Qty.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Qty Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else if(TextPane_Discrption.getText().replaceAll(" ", "").equals("")) {
        			JOptionPane.showOptionDialog(null, "Discription Required", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		}else {
        			if(TextField_Date.getText().matches(datePattern) == false) {
        				JOptionPane.showOptionDialog(null, "Date is not valid", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        			}else if(TextField_DueDate.getText().matches(datePattern) == false) {
        				JOptionPane.showOptionDialog(null, "Due Date is not valid", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        			}else {
        				//sets up string to integer variables
        				Integer qty = null;
        				
        				//sets up work in progress so it can be added to
        				WorkInProgress workInProgressList = fileHandler.getWorkInProgress(new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\WorkInProgress\\WorkInProgressList.JSON"));
        				
        				try 
        		        { 
        					qty = Integer.parseInt(TextField_Qty.getText());
        		        }  
        		        catch (NumberFormatException exepetion)  
        		        { 
        		        	JOptionPane.showOptionDialog(null, exepetion.getMessage(), "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        		        } 
        				
        				if(qty != null) {
        					workOrder.setDate(TextField_Date.getText());
        					workOrder.setPart(currentPart);
        					workOrder.setWorkOrderNumber(TextField_WorkOrderNumber.getText());
        					workOrder.setCustomer(selectedCustomer.getName());
        					workOrder.setPhone(TextField_Phone.getText());
        					workOrder.setFax(TextField_Fax.getText());
        					workOrder.setCharge(CheckBox_Charge.isSelected());
        					workOrder.setCod(CheckBox_COD.isSelected());
        					workOrder.setRush(CheckBox_Rush.isSelected());
        					workOrder.setOverTime(CheckBox_OverTime.isSelected());
        					workOrder.setDueDate(TextField_DueDate.getText());
        					workOrder.setQty(qty);
        					workOrder.setSmc(CheckBox_SMC.isSelected());
        					workOrder.setMotorFreight(CheckBox_MotorFreight.isSelected());
        					workOrder.setCpu(CheckBox_Cpu.isSelected());
        					workOrder.setUps(CheckBox_Ups.isSelected());
        					workOrder.setCourier(CheckBox_Courier.isSelected());
        					workOrder.setDescription(TextPane_Discrption.getText()); 
        					workOrderSuper.addWorkOrder(workOrder);
        					
        					/*
        					 * Put all the stuff that needs to be added after the parts are done
        					 */
        					if(totalParts == currentPart) {
        						//adds work order to other fields
        						workInProgressList.addWorkOrder(workOrderSuper);
            					selectedCustomer.addWorkOrdersDirectories(workOrderSuper);
            					
            					//saves all the work order stuff if we are on the last part
            					fileHandler.writeFile(new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\WorkInProgress\\WorkInProgressList.JSON"), workInProgressList);
            					if(selectedCustomer.getName().equals("WalkIn")) {
            						fileHandler.writeFile(new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\Customers\\" + "zzz-WalkIn" + ".JSON"), selectedCustomer);
            					}else {
            						fileHandler.writeFile(new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\Customers\\" + selectedCustomer.getName() + ".JSON"), selectedCustomer);
            					}
            					//makes the work order directory
            					new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\WorkOrders\\" + workOrder.getWorkOrderNumber()).mkdirs();
            					fileHandler.writeFile(new File("\\\\192.168.0.125\\ServiceMachineTimeCardSystem\\WorkOrders\\" + workOrder.getWorkOrderNumber() +
            							"\\" + workOrder.getWorkOrderNumber() +".JSON"), workOrderSuper);
            					
            					//makes JOptionPane field to confirm the creation of work order
            					int x = JOptionPane.showOptionDialog(null, "Work Order Created", "error", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            					System.out.println("X value: " + x);
            					if(x == 0) {
            						MainRunner.runWorkOrderMain();
            		        		//finds current frame out of listed frames and disposes of it
            		        		for(int i = 0; i < Frame.getFrames().length; i++) {
            		        			if(Frame.getFrames()[i].getTitle().equals("singlePartNewWorkOrder " + currentPart)) {
            		        				Frame.getFrames()[i].dispose();
            		        			}if(Frame.getFrames()[i].getTitle().equals("workOrderExtra")) {
            		        				Frame.getFrames()[i].dispose();
            		        			}
            		        		}
            					}
        					}else {
        						//finds current frame out of listed frames and disposes of it
        		        		for(int i = 0; i < Frame.getFrames().length; i++) {
        		        			if(Frame.getFrames()[i].getTitle().equals("multiPartNewWorkOrder " + currentPart)) {
        		        				Frame.getFrames()[i].dispose();
        		        			}if(Frame.getFrames()[i].getTitle().equals("workOrderExtra")) {
        		        				Frame.getFrames()[i].dispose();
        		        			}
        		        		}
        						//used when the work order is not on the final part
        						newWorkOrderMultiPart nextPart = new newWorkOrderMultiPart(totalParts, currentPart+1, workOrderSuper);
        						nextPart.setVisible(true);
        						
        						
        					}       					     					
      					
        				}       				
        			}
        			
        		}
        		
        		
        	}
        });
        
        pack();
    }// </editor-fold>//GEN-END:initComponents
    private javax.swing.JButton Button_Submit;
    private javax.swing.JCheckBox CheckBox_COD;
    private javax.swing.JCheckBox CheckBox_Charge;
    private javax.swing.JCheckBox CheckBox_Courier;
    private javax.swing.JCheckBox CheckBox_Cpu;
    private javax.swing.JCheckBox CheckBox_MotorFreight;
    private javax.swing.JCheckBox CheckBox_OverTime;
    private javax.swing.JCheckBox CheckBox_Rush;
    private javax.swing.JCheckBox CheckBox_SMC;
    private javax.swing.JCheckBox CheckBox_Ups;
    private javax.swing.JMenu Menu_Back;
    private javax.swing.JPanel PanelButtons;
    private javax.swing.JPanel PanelCharge;
    private javax.swing.JPanel PanelCourier;
    private javax.swing.JPanel PanelCpu;
    private javax.swing.JPanel PanelCustomer;
    private javax.swing.JPanel PanelDate;
    private javax.swing.JPanel PanelDescription;
    private javax.swing.JPanel PanelDueDate;
    private javax.swing.JPanel PanelFax;
    private javax.swing.JPanel PanelMotorFreight;
    private javax.swing.JPanel PanelOrderedBy;
    private javax.swing.JPanel PanelOverTime;
    private javax.swing.JPanel PanelPhoneNumber;
    private javax.swing.JPanel PanelQty;
    private javax.swing.JPanel PanelRush;
    private javax.swing.JPanel PanelShipVia;
    private javax.swing.JPanel PanelSmc;
    private javax.swing.JPanel PanelSubmit;
    private javax.swing.JPanel PanelUps;
    private javax.swing.JPanel PanelWorkOrderNumber;
	public static javax.swing.JTextField TextField_Customer;
    private javax.swing.JFormattedTextField TextField_Date;
    private javax.swing.JTextField TextField_DueDate;
    private javax.swing.JTextField TextField_Fax;
    private javax.swing.JTextField TextField_OrderedBy;
    private javax.swing.JTextField TextField_Phone;
    private javax.swing.JTextField TextField_Qty;
    private javax.swing.JFormattedTextField TextField_WorkOrderNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane TextPane_Discrption;
    private JMenu mnExtraMenu;
    // End of variables declaration//GEN-END:variables
}
